{"version":3,"sources":["assets/replay.svg","assets/more_time.svg","assets/ellipsis-v-solid.svg","assets/add_circle_outline_black.svg","assets/brain-solid.svg","assets/paper-plane-solid.svg","assets/times-circle-regular.svg","assets/check-circle-regular.svg","assets/clock-regular.svg","assets/check-solid.svg","assets/trash-solid.svg","assets/audios/click.mp3","assets/audios/alarm.mp3","assets/globe-solid.svg","components/NavBar/index.jsx","pages/App/index.js","reportWebVitals.js","index.js"],"names":["NavBar","className","src","Logo","alt","GlobeIcon","App","useState","title","done","newTask","setnewTask","JSON","parse","localStorage","getItem","tasks","setTasks","selectedTask","setSelectedTask","minutes","seconds","clock","setClock","current","pomodoros","breaks","longBreaks","progress","setProgress","showTaskForm","setShowTaskForm","start","setStart","useSound","Click","clickSound","Alarm","alarmSound","changeTimer","type","useEffect","document","store","timerId","workerTimers","key","value","setItem","stringify","TaskList","props","listItems","map","task","onClick","Check","Incomplete","Replay","MoreTime","Menu","Add","Brain","taskList","index","length","completeTask","CheckSolid","push","deleteTask","Trash","placeholder","onChange","e","target","Send","Close","draggable","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c967c6fd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/replay.41e71c21.svg\";","export default __webpack_public_path__ + \"static/media/more_time.1e5a3c4a.svg\";","export default __webpack_public_path__ + \"static/media/ellipsis-v-solid.6cf67d90.svg\";","export default __webpack_public_path__ + \"static/media/add_circle_outline_black.929c4732.svg\";","export default __webpack_public_path__ + \"static/media/brain-solid.83871b26.svg\";","export default __webpack_public_path__ + \"static/media/paper-plane-solid.57094fe6.svg\";","export default __webpack_public_path__ + \"static/media/times-circle-regular.0f761569.svg\";","export default __webpack_public_path__ + \"static/media/check-circle-regular.e113d734.svg\";","export default __webpack_public_path__ + \"static/media/clock-regular.6baa5320.svg\";","export default __webpack_public_path__ + \"static/media/check-solid.5dcf9568.svg\";","export default __webpack_public_path__ + \"static/media/trash-solid.8b6b7284.svg\";","export default __webpack_public_path__ + \"static/media/click.497cffed.mp3\";","export default __webpack_public_path__ + \"static/media/alarm.8e835db2.mp3\";","export default __webpack_public_path__ + \"static/media/globe-solid.440a2c1a.svg\";","import React from \"react\";\r\n\r\nimport \"./index.css\";\r\n\r\nimport Logo from \"../../assets/brain-solid.svg\";\r\nimport GlobeIcon from \"../../assets/globe-solid.svg\";\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <>\r\n      <div className=\"navbar-container\">\r\n        <section>\r\n          <img src={Logo} alt=\"Logo\" />\r\n          <h1>Focus on me</h1>\r\n        </section>\r\n        <section>\r\n          <h1>What is Pomodoro?</h1>\r\n          <img src={GlobeIcon} alt=\"Globe\" />\r\n          <h1>En</h1>\r\n        </section>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import { useEffect, useState } from \"react\";\nimport useSound from \"use-sound\";\nimport * as workerTimers from \"worker-timers\";\n\nimport \"./index.css\";\n\nimport Replay from \"../../assets/replay.svg\";\nimport MoreTime from \"../../assets/more_time.svg\";\nimport Menu from \"../../assets/ellipsis-v-solid.svg\";\nimport Add from \"../../assets/add_circle_outline_black.svg\";\nimport Brain from \"../../assets/brain-solid.svg\";\nimport Send from \"../../assets/paper-plane-solid.svg\";\nimport Close from \"../../assets/times-circle-regular.svg\";\nimport Check from \"../../assets/check-circle-regular.svg\";\nimport Incomplete from \"../../assets/clock-regular.svg\";\nimport CheckSolid from \"../../assets/check-solid.svg\";\nimport Trash from \"../../assets/trash-solid.svg\";\n\nimport Click from \"../../assets/audios/click.mp3\";\nimport Alarm from \"../../assets/audios/alarm.mp3\";\n\nimport NavBar from \"../../components/NavBar\";\n\nfunction App() {\n  const [newTask, setnewTask] = useState({\n    title: \"\",\n    done: false,\n  });\n\n  const [tasks, setTasks] = useState(\n    JSON.parse(localStorage.getItem(\"tasks\")) || []\n  );\n\n  const [selectedTask, setSelectedTask] = useState(\n    JSON.parse(localStorage.getItem(\"selectedTask\")) || \"\"\n  );\n\n  const [clock, setClock] = useState({\n    minutes: 25,\n    seconds: 0,\n  });\n\n  const [progress, setProgress] = useState({\n    current: \"pomodoro\",\n    pomodoros: 0,\n    breaks: 0,\n    longBreaks: 0,\n  });\n\n  const [showTaskForm, setShowTaskForm] = useState(false);\n\n  const [start, setStart] = useState(false);\n\n  const [clickSound] = useSound(Click);\n  const [alarmSound] = useSound(Alarm);\n\n  const startTimer = () => {\n    if (clock.minutes === 0 && clock.seconds === 0) {\n      alarmSound();\n      if (progress.current === \"pomodoro\") {\n        setProgress({ ...progress, pomodoros: progress.pomodoros++ });\n        if (progress.pomodoros !== 0 && progress.pomodoros % 3 === 0) {\n          changeTimer(15, \"longBreak\");\n        } else {\n          changeTimer(5, \"break\");\n        }\n      }\n      if (progress.current === \"break\") {\n        setProgress({ ...progress, breaks: progress.breaks++ });\n        changeTimer(25, \"pomodoro\");\n      }\n      if (progress.current === \"longBreak\") {\n        setProgress({ ...progress, longBreaks: progress.longBreaks++ });\n        changeTimer(25, \"pomodoro\");\n      }\n      setStart(!start);\n    } else if (clock.seconds === 0) {\n      setClock({ minutes: clock.minutes - 1, seconds: 59 });\n    } else {\n      setClock({ ...clock, seconds: clock.seconds - 1 });\n    }\n  };\n\n  const restartTimer = () => {\n    if (start) {\n      setStart(!start);\n    }\n    setClock({ minutes: 25, seconds: 0 });\n  };\n\n  const changeTimer = (minutes, type) => {\n    if (start) {\n      setStart(!start);\n    }\n    setClock({ minutes, seconds: 0 });\n    setProgress({ ...progress, current: type });\n  };\n\n  useEffect(() => {\n    document.title = `${\n      clock.minutes < 10 ? \"0\" + clock.minutes : clock.minutes\n    }:${clock.seconds < 10 ? \"0\" + clock.seconds : clock.seconds} - ${\n      selectedTask ? selectedTask : \"Let's Focus!\"\n    }`;\n\n    store(\"tasks\", tasks);\n    store(\"selectedTask\", selectedTask);\n    if (start) {\n      const timerId = workerTimers.setInterval(() => startTimer(), 1000);\n      return () => workerTimers.clearInterval(timerId);\n    }\n  });\n\n  const store = (key, value) => {\n    localStorage.setItem(key, JSON.stringify(value));\n  };\n\n  function TaskList(props) {\n    const tasks = props.tasks;\n    const listItems = tasks.map((task) => (\n      <div className=\"task\" key={task.title}>\n        <div />\n        <div onClick={() => setSelectedTask(task.title)}>\n          <img src={task.done ? Check : Incomplete} alt=\"check\" />\n          <span>{task.title}</span>\n        </div>\n        <div></div>\n      </div>\n    ));\n    return <ul>{listItems}</ul>;\n  }\n\n  function deleteTask(title) {\n    let taskList = [];\n    for (let index = 0; index < tasks.length; index++) {\n      if (tasks[index].title !== title) {\n        taskList.push(tasks[index]);\n      }\n    }\n    setTasks(taskList);\n    setSelectedTask(taskList.length !== 0 ? taskList[0].title : \"\");\n  }\n\n  function completeTask(title) {\n    let taskList = tasks;\n    for (let index = 0; index < taskList.length; index++) {\n      if (taskList[index].title === title) {\n        taskList[index] = { ...tasks[index], done: true };\n      }\n    }\n    setTasks(taskList);\n    setSelectedTask(\"\");\n  }\n\n  return (\n    <>\n      <div className=\"container\">\n        <NavBar />\n        <div className=\"pomodoro\">\n          <section className=\"timer\">\n            <div className=\"timer-options\">\n              <div>\n                <h3 onClick={() => changeTimer(25, \"pomodoro\")}>Pomodoro</h3>\n                <h6>{progress.pomodoros}</h6>\n                <h3 onClick={() => changeTimer(5, \"break\")}>Break</h3>\n                <h6>{progress.breaks}</h6>\n                <h3 onClick={() => changeTimer(15, \"longBreak\")}>Long Break</h3>\n                <h6>{progress.longBreaks}</h6>\n              </div>\n              <div>\n                <img src={Replay} alt=\"replay\" onClick={restartTimer}></img>\n                <img src={MoreTime} alt=\"more time\"></img>\n                <img src={Menu} alt=\"menu\"></img>\n              </div>\n            </div>\n            <div className=\"stopwatch\">\n              <h1>\n                {clock.minutes < 10 ? \"0\" + clock.minutes : clock.minutes}:\n                {clock.seconds < 10 ? \"0\" + clock.seconds : clock.seconds}\n              </h1>\n              <button\n                onClick={() => {\n                  setStart(!start);\n                  clickSound();\n                }}\n                className={\n                  start ? \"stopwatch-button-stop\" : \"stopwatch-button-focus\"\n                }\n              >\n                <h2>{start ? \"Stop\" : \"Focus\"}</h2>\n              </button>\n            </div>\n          </section>\n          <section className=\"task-panel\">\n            <div onClick={() => setShowTaskForm(!showTaskForm)}>\n              <img src={Add} alt=\"add\"></img>\n              <h3>Add new task</h3>\n            </div>\n            <div>\n              <img src={Brain} alt=\"brain\"></img>\n              <h3>Focusing on: </h3>\n              <span>{selectedTask}</span>\n              <section>\n                <img\n                  onClick={() => completeTask(selectedTask)}\n                  src={CheckSolid}\n                  alt=\"check\"\n                ></img>\n                <img\n                  onClick={() => deleteTask(selectedTask)}\n                  src={Trash}\n                  alt=\"trash\"\n                ></img>\n              </section>\n            </div>\n          </section>\n          {showTaskForm ? (\n            <section className=\"task-form\">\n              <input\n                type=\"text\"\n                placeholder=\"My task...\"\n                value={newTask.title}\n                onChange={(e) =>\n                  setnewTask({ ...newTask, title: e.target.value })\n                }\n              />\n              <div>\n                <img\n                  src={Send}\n                  alt=\"send\"\n                  onClick={() => {\n                    setTasks([...tasks, newTask]);\n                    setShowTaskForm(!showTaskForm);\n                    setnewTask({ ...newTask, title: \"\" });\n                  }}\n                />\n\n                <img\n                  src={Close}\n                  draggable=\"false\"\n                  alt=\"close\"\n                  onClick={() => setShowTaskForm(!showTaskForm)}\n                />\n              </div>\n            </section>\n          ) : null}\n          <section>\n            <TaskList tasks={tasks} />\n          </section>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./pages/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}